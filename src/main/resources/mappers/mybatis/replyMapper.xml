<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 다른 mapper와 중복되지 않고록 네임스페이스 기재 -->
<mapper namespace="reply">
	<!-- 1. 댓글입력 -->
	<insert id = "insertReply">
		INSERT INTO tbl_reply(rno, replytext, bno, replyer, userName, secretReply)
		values(reply_seq.nextval, #{replytext},#{bno}, #{replyer}, #{userName}, #{secretReply})
	</insert>
	<!-- 2. 댓글목록 -->
	<select id = "listReply" resultType="com.app.spring.model.dto.ReplyVO">
		<include refid = "pagingHeader"/>
		<!-- select rno, bno, replytext, replyer, userName, r.regdate, r.updatedate
		FROM tbl_reply r, member m
		WHERE r.replyer = m.id AND bno=#{bno}
		ORDER BY rno -->
		
		SELECT r.rno, bno, r.replytext, r.replyer, secretReply, r.regdate, r.updatedate, r.userName, (SELECT writer FROM tbl_board WHERE bno=r.bno) AS writer
		FROM tbl_reply r, member m
		WHERE
		r.replyer = m.id AND bno= #{bno}
		order by rno
		<include refid="pagingFooter"/>
	</select>
	
	
	<!-- 3. 댓글 상세보기 -->
	<select id = "detailReply" resultType="com.app.spring.model.dto.ReplyVO">
		SELECT rno,bno,replyText,replyer,regdate,updatedate,secretReply
		FROM tbl_reply
		WHERE rno=#{rno}
	</select>
	
	
	<!-- 4. 댓글 수정 -->
	<select id ="updateReply">
		UPDATE tbl_reply
		SET replytext=#{replytext}
		WHERE rno=#{rno}
	</select>
	
	
	<!-- 5. 댓글삭제 -->
	<delete id = "deleteReply">
		DELETE FROM tbl_reply
		WHERE rno = #{rno}
	</delete>
	
	
	
	<!-- 6. 댓글 갯수(페이징처리) -->
	<select id = "countReply" resultType="int">
		SELECT count(*)	 FROM tbl_reply WHERE bno=#{bno}
	</select>
	
	
	
	<!-- 페이징 SQL -->
	<sql id = "pagingHeader">
	SELECT * FROM( SELECT ROWNUM as rn, a.* FROM(
	</sql>
	<sql id = "pagingFooter">
		)A
	)WHERE rn BETWEEN #{start} AND #{end}
	</sql>
</mapper>