<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "board">

	<!-- 01. 게시글 전체 목록 조회 & 검색 조회까지 -->
	<select id = "listAll" resultType = "com.app.spring.model.dto.BoardVO">
		<!-- 목록조회 및 페이징 전체 쿼리 -->
		<include refid = "pagingHeader"></include>
        SELECT rownum, bno,title,content, B.regdate, viewcnt, userName, (SELECT count(*) FROM tbl_reply WHERE bno=b.bno) as recnt
        FROM TBL_BOARD B, MEMBER M       
    	<include refid="search"></include>
        ORDER BY bno desc, B.regdate desc
        <include refid = "pagingFooter"></include>
	</select>
	
	<!-- 게시글 레코드 갯수 확인 -->
	<select id="countArticle" resultType ="int"	>
		select count(*) From tbl_board b, member m
		<!-- SQL 재사용 -->
		<include refid="search"></include>
	</select>
	
	<!-- sql 조각 -->
	<!-- 반복되는 SQL의 일부를 SQL태그를 이용하여 따로 빼둘수 있다. -->
	<sql id = "search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test ="searchOption ==  'all' ">
				WHERE B.writer = M.id AND
				(writer like '%'||#{keyword}||'%'
	            OR content like '%'||#{keyword}||'%'
	            OR title like '%'||#{keyword}||'%')
            </when>
            <!-- 전체 검색이 아닐 경우 -->
            <otherwise>
            	WHERE B.writer = M.id AND
            	${searchOption} like '%'||#{keyword}||'%'
            </otherwise>
		</choose>
	</sql>
	
	<!-- 페이징 SQL -->
	<sql id  ="pagingHeader">
		Select * FROM (
		SELECT ROWNUM AS rn, A.* from(
	</sql>
	<sql id = "pagingFooter">
		 )A
		)WHERE rn BETWEEN #{start} AND #{end}
	</sql>
	
	
	
	 <!-- 02. 게시글 작성 -->
	 <!-- nvl (A,B) : A가 null 이면 B, null 이 아니면 A -->
	 <!-- nvl(컬럼명, 바꿀데이터) -->
	 <!-- 여기선 bno가 null값이라면(처음 게시물을 작성하면) 1이들어가고, 아니라면 bno값에 1을 더한 값이 된다.-->
	<insert id = "insert">
		INSERT INTO tbl_board ( bno, title, content, writer, userName
        ) VALUES ((SELECT NVL(MAX(bno)+1, 1)FROM tbl_board), #{title}, #{content}, #{writer}, #{userName}  )
	</insert>
	
	<!--03. 게시글 상세보기 조회 -->
	<select id = "view" resultType ="com.app.spring.model.dto.BoardVO">
		SELECT * FROM tbl_board 
        WHERE bno = #{bno}
	</select>
	
	<!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET
        	viewcnt = viewcnt + 1 <!-- 조회수 +1 -->
        WHERE bno = #{bno}
    </update>
    
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content}
        WHERE bno = #{bno}
    </update>
    
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>

</mapper>